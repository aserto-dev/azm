// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aserto-dev/azm/model (interfaces: Instances)

// Package model is a generated GoMock package.
package model

import (
	reflect "reflect"

	stats "github.com/aserto-dev/azm/stats"
	gomock "github.com/golang/mock/gomock"
)

// MockInstances is a mock of Instances interface.
type MockInstances struct {
	ctrl     *gomock.Controller
	recorder *MockInstancesMockRecorder
}

// MockInstancesMockRecorder is the mock recorder for MockInstances.
type MockInstancesMockRecorder struct {
	mock *MockInstances
}

// NewMockInstances creates a new mock instance.
func NewMockInstances(ctrl *gomock.Controller) *MockInstances {
	mock := &MockInstances{ctrl: ctrl}
	mock.recorder = &MockInstancesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInstances) EXPECT() *MockInstancesMockRecorder {
	return m.recorder
}

// GetStats mocks base method.
func (m *MockInstances) GetStats() (*stats.Stats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats")
	ret0, _ := ret[0].(*stats.Stats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStats indicates an expected call of GetStats.
func (mr *MockInstancesMockRecorder) GetStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockInstances)(nil).GetStats))
}
