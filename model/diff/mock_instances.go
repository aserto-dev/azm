// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aserto-dev/azm/model/diff (interfaces: Instances)

// Package diff is a generated GoMock package.
package diff

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInstances is a mock of Instances interface
type MockInstances struct {
	ctrl     *gomock.Controller
	recorder *MockInstancesMockRecorder
}

// MockInstancesMockRecorder is the mock recorder for MockInstances
type MockInstancesMockRecorder struct {
	mock *MockInstances
}

// NewMockInstances creates a new mock instance
func NewMockInstances(ctrl *gomock.Controller) *MockInstances {
	mock := &MockInstances{ctrl: ctrl}
	mock.recorder = &MockInstancesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInstances) EXPECT() *MockInstancesMockRecorder {
	return m.recorder
}

// ObjectsExist mocks base method
func (m *MockInstances) ObjectsExist(arg0 context.Context, arg1 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObjectsExist", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ObjectsExist indicates an expected call of ObjectsExist
func (mr *MockInstancesMockRecorder) ObjectsExist(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObjectsExist", reflect.TypeOf((*MockInstances)(nil).ObjectsExist), arg0, arg1)
}

// RelationsExist mocks base method
func (m *MockInstances) RelationsExist(arg0 context.Context, arg1, arg2 string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RelationsExist", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RelationsExist indicates an expected call of RelationsExist
func (mr *MockInstancesMockRecorder) RelationsExist(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RelationsExist", reflect.TypeOf((*MockInstances)(nil).RelationsExist), arg0, arg1, arg2)
}
